---
import type { ColorMode, ColorScheme } from "../types/colors";
import { buildColorsBodyClasses } from "../config/colors";
import Navigation from "../components/Navigation.astro";
import { ROUTES } from "../config/routes";

export interface Props {
  title: string;
  colorScheme?: ColorScheme;
  colorMode?: ColorMode;
}

const { title = "nbr.haus", colorMode = "light", colorScheme = "default" } = Astro.props;

// exclude home route from ROUTES
const routes = ROUTES.filter(route => route.path !== "/");
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class={buildColorsBodyClasses(colorScheme, colorMode)}>
    <Navigation slot="nav" routes={routes} />
    <main class="content">
      <slot />
    </main>
  </body>
</html>

<style lang="scss" is:global>
  @import "../styles/colorscheme";
  @import "../styles/variables";
  @import "../styles/fonts.css";

  html,
  body {
    min-height: 100vh;
  }

  main {
    min-height: inherit;
  }

  body {
    font-family: var(--font-family-text);
    line-height: var(--line-height-2);
    font-size: 100%;

    background-color: var(--color-bg);
    color: var(--color-fg);

    padding: 0;
    margin: 0;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    * {
      box-sizing: border-box;
    }

    &::-webkit-scrollbar {
      display: none;
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-family-heading);
  }

  a {
    position: relative;
    color: var(--color-fg-accent);
    font-weight: var(--font-weight-bold);
    text-decoration: none;

    &::before {
      content: "";
      position: absolute;
      width: 0%;
      height: 50%;
      left: -10%;
      bottom: 0;
      mix-blend-mode: multiply;
      opacity: 0.25;
      background-color: var(--color-fg-accent-light);
      transition: width var(--transition-time-medium);
    }

    &:hover::before {
      width: 120%;
    }
  }
</style>
